# Trinitas v3.5 TRUE - Docker Compose Configuration
version: '3.8'

# Load environment variables from .env file
env_file:
  - .env

services:
  # MCP Orchestrator - 中央制御
  mcp-orchestrator:
    container_name: trinitas-orchestrator
    build:
      context: ./mcp-orchestrator
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MCP_MODE=orchestrator
      - LOG_LEVEL=INFO
      - CLAUDE_MCP_URL=http://claude-mcp:8001
      - LOCAL_MCP_URL=http://local-mcp:8002
    volumes:
      - ./shared:/app/shared
      - ./mcp-orchestrator:/app
    networks:
      - trinitas-network
    depends_on:
      - claude-mcp
      - local-mcp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Claude MCP Server - Trinity Core
  claude-mcp:
    container_name: trinitas-claude-mcp
    build:
      context: ./claude-mcp
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - MCP_MODE=claude
      - PERSONAS=springfield,krukai,vector
      - LANGUAGE=japanese
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
    volumes:
      - ./shared:/app/shared
      - ./claude-mcp:/app
      - ../personas:/app/personas  # 既存のペルソナファイル
    networks:
      - trinitas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Local LLM MCP Server - Elmo Operations
  local-mcp:
    container_name: trinitas-local-mcp
    build:
      context: ./local-mcp
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - MCP_MODE=local
      - PERSONAS=groza,littara
      - LANGUAGE=english
      - LOCAL_LLM_ENDPOINT=${LOCAL_LLM_ENDPOINT:-http://192.168.99.102:1234/v1}
      - LOCAL_LLM_API_KEY=${LOCAL_LLM_API_KEY}
    volumes:
      - ./shared:/app/shared
      - ./local-mcp:/app
      - ../local-llm/personas:/app/personas  # 新しいペルソナファイル
    networks:
      - trinitas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and state management
  redis:
    container_name: trinitas-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - trinitas-network
    command: redis-server --appendonly yes

  # Prometheus for monitoring
  prometheus:
    container_name: trinitas-prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - trinitas-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Grafana for visualization
  grafana:
    container_name: trinitas-grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - trinitas-network
    depends_on:
      - prometheus

networks:
  trinitas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  redis-data:
  prometheus-data:
  grafana-data: