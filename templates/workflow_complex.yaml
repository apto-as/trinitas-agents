# workflow_complex.yaml - 複雑タスク用ワークフローテンプレート

name: "Complex Task Workflow"
description: "複雑で大規模なタスクのための包括的ワークフロー"
complexity: complex
parallel_execution: true
wave_mode_compatible: true

steps:
  - id: analyze
    name: "包括的分析"
    description: "システム全体の詳細な要件分析"
    default_persona: springfield
    tools:
      - Read
      - Grep
      - Sequential
      - Task
    estimated_time: 30
    estimated_tokens: 5000
    wave: 1
    
  - id: design
    name: "アーキテクチャ設計"
    description: "スケーラブルなシステムアーキテクチャの設計"
    default_persona: springfield
    tools:
      - Sequential
      - Context7
      - Task
    dependencies:
      - analyze
    estimated_time: 45
    estimated_tokens: 8000
    wave: 1
    
  - id: prototype
    name: "プロトタイプ開発"
    description: "概念実証とリスク検証"
    default_persona: krukai
    tools:
      - Write
      - Magic
      - Context7
    dependencies:
      - design
    estimated_time: 40
    estimated_tokens: 7000
    wave: 2
    
  - id: implement_core
    name: "コア機能実装"
    description: "中核となる機能の実装"
    default_persona: krukai
    tools:
      - Write
      - Edit
      - MultiEdit
      - Task
    dependencies:
      - prototype
    estimated_time: 90
    estimated_tokens: 15000
    wave: 3
    
  - id: implement_features
    name: "機能拡張実装"
    description: "追加機能とエンハンスメント"
    default_persona: krukai
    tools:
      - Write
      - Edit
      - MultiEdit
    dependencies:
      - implement_core
    estimated_time: 60
    estimated_tokens: 10000
    wave: 3
    parallel_with:
      - security_audit
    
  - id: security_audit
    name: "セキュリティ監査"
    description: "包括的なセキュリティレビューと強化"
    default_persona: vector
    tools:
      - Sequential
      - Grep
      - Task
    dependencies:
      - implement_core
    estimated_time: 45
    estimated_tokens: 6000
    wave: 3
    
  - id: test_integration
    name: "統合テスト"
    description: "システム全体の統合テスト"
    default_persona: vector
    tools:
      - Playwright
      - Sequential
      - Task
    dependencies:
      - implement_features
      - security_audit
    estimated_time: 60
    estimated_tokens: 8000
    wave: 4
    
  - id: optimize
    name: "最適化"
    description: "パフォーマンスとリソース使用の最適化"
    default_persona: krukai
    tools:
      - Sequential
      - Edit
      - Playwright
    dependencies:
      - test_integration
    estimated_time: 50
    estimated_tokens: 7000
    wave: 4
    
  - id: document
    name: "包括的文書化"
    description: "技術文書、API文書、ユーザーガイド"
    default_persona: springfield
    tools:
      - Write
      - Context7
      - Task
    dependencies:
      - implement_features
    estimated_time: 40
    estimated_tokens: 5000
    wave: 4
    parallel_with:
      - optimize
    
  - id: deploy
    name: "段階的デプロイ"
    description: "本番環境への段階的展開"
    default_persona: springfield
    tools:
      - Bash
      - Sequential
      - Task
    dependencies:
      - test_integration
      - document
      - optimize
    estimated_time: 30
    estimated_tokens: 4000
    wave: 5

# Wave実行設定
wave_execution:
  enabled: true
  wave_count: 5
  validation_between_waves: true
  rollback_capability: true
  
  waves:
    - number: 1
      name: "分析と設計"
      steps: [analyze, design]
      
    - number: 2
      name: "プロトタイピング"
      steps: [prototype]
      
    - number: 3
      name: "実装とセキュリティ"
      steps: [implement_core, implement_features, security_audit]
      
    - number: 4
      name: "品質保証と最適化"
      steps: [test_integration, optimize, document]
      
    - number: 5
      name: "デプロイメント"
      steps: [deploy]

# 並列実行グループ
parallel_groups:
  - name: "機能実装とセキュリティ"
    steps:
      - implement_features
      - security_audit
    max_parallel: 2
    
  - name: "最適化と文書化"
    steps:
      - optimize
      - document
    max_parallel: 2

# カスタマイズルール
customization_rules:
  - condition:
      domains: ["security", "backend"]
    modifications:
      security_audit:
        time_multiplier: 1.5
        tools_add: ["Context7"]
      implement_core:
        description_append: "（セキュアコーディング規約適用）"
        
  - condition:
      domains: ["performance"]
    modifications:
      optimize:
        time_multiplier: 1.4
        description: "徹底的なパフォーマンス最適化"
      prototype:
        description_append: "（パフォーマンステストを含む）"
        
  - condition:
      wave_score: ">= 80"
    modifications:
      _global:
        enable_wave_checkpoints: true
        wave_validation_strict: true

# 品質ゲート
quality_gates:
  - after_wave: 1
    checks:
      - design_approved: true
      - risk_assessment_complete: true
      
  - after_wave: 2
    checks:
      - prototype_validated: true
      - feasibility_confirmed: true
      
  - after_wave: 3
    checks:
      - security_audit_passed: true
      - code_coverage: ">= 85"
      
  - after_wave: 4
    checks:
      - integration_tests_passed: true
      - performance_targets_met: true
      - documentation_complete: true

# リスク管理
risk_mitigation:
  - risk: "スコープクリープ"
    mitigation: "Wave間での要件凍結"
    
  - risk: "技術的負債"
    mitigation: "各Waveでのリファクタリング時間確保"
    
  - risk: "セキュリティ脆弱性"
    mitigation: "継続的セキュリティスキャン"

# 成功基準
success_criteria:
  - all_waves_completed: true
  - quality_gates_passed: true
  - time_variance_percent: 30
  - parallel_efficiency: ">= 0.75"
  - wave_rollback_count: "<= 1"
  - security_vulnerabilities: 0
  - performance_regression: false